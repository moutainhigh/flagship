<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzcf.flagship.dao.RiskEmailMapper" >
  <resultMap id="BaseResultMap" type="com.hzcf.flagship.model.RiskEmail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="org_no" property="orgNo" jdbcType="VARCHAR" />
    <result column="receiver_no" property="receiverNo" jdbcType="VARCHAR" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, org_no, receiver_no, receiver_name, receiver_address, result, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hzcf.flagship.model.RiskEmailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_risk_email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from f_risk_email
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from f_risk_email
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzcf.flagship.model.RiskEmailExample" >
    delete from f_risk_email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzcf.flagship.model.RiskEmail" >
    insert into f_risk_email (id, org_no, receiver_no, 
      receiver_name, receiver_address, result, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{orgNo,jdbcType=VARCHAR}, #{receiverNo,jdbcType=VARCHAR}, 
      #{receiverName,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR}, #{result,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hzcf.flagship.model.RiskEmail" >
    insert into f_risk_email
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgNo != null" >
        org_no,
      </if>
      <if test="receiverNo != null" >
        receiver_no,
      </if>
      <if test="receiverName != null" >
        receiver_name,
      </if>
      <if test="receiverAddress != null" >
        receiver_address,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgNo != null" >
        #{orgNo,jdbcType=VARCHAR},
      </if>
      <if test="receiverNo != null" >
        #{receiverNo,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null" >
        #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzcf.flagship.model.RiskEmailExample" resultType="java.lang.Integer" >
    select count(*) from f_risk_email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update f_risk_email
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orgNo != null" >
        org_no = #{record.orgNo,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverNo != null" >
        receiver_no = #{record.receiverNo,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverName != null" >
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverAddress != null" >
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update f_risk_email
    set id = #{record.id,jdbcType=BIGINT},
      org_no = #{record.orgNo,jdbcType=VARCHAR},
      receiver_no = #{record.receiverNo,jdbcType=VARCHAR},
      receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzcf.flagship.model.RiskEmail" >
    update f_risk_email
    <set >
      <if test="orgNo != null" >
        org_no = #{orgNo,jdbcType=VARCHAR},
      </if>
      <if test="receiverNo != null" >
        receiver_no = #{receiverNo,jdbcType=VARCHAR},
      </if>
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzcf.flagship.model.RiskEmail" >
    update f_risk_email
    set org_no = #{orgNo,jdbcType=VARCHAR},
      receiver_no = #{receiverNo,jdbcType=VARCHAR},
      receiver_name = #{receiverName,jdbcType=VARCHAR},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      result = #{result,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 设置查询条件 -->
  <sql id="dynamicPageWhere">
  	<if test="result != null">
  		and result = #{result}
 	</if>
	<if test="start_time != null">
 	<![CDATA[
 		AND DATE_FORMAT(create_time ,'%Y-%m-%d') >= #{start_time}
 		]]>
 	</if>
 	<if test="end_time != null">
 	<![CDATA[
 		AND DATE_FORMAT(create_time ,'%Y-%m-%d') <= #{end_time}
 	]]>
 	</if>
  </sql>
  
  
   <!-- 邮件详情列表分页 -->
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
  	SELECT
		id,
		org_no,
		receiver_no,
		receiver_name,
		receiver_address,
	  case 
	  	result when 1 then '成功'
	 	 when 0 then '失败'
	  end result,
  		create_time
	FROM
	f_risk_email
 WHERE
	1 = 1
<include refid="dynamicPageWhere"/>
    order by  create_time desc
	limit #{startIndex},#{pageSize}
  </select>
  
   <!--邮件详情列表分页总数 -->
  <select id="findAllByPageCount" resultType="long" parameterType="hashmap">
  	SELECT COUNT(*) FROM f_risk_email
	WHERE 1=1
	<include refid="dynamicPageWhere"/>
  </select>
  <!-- 查询邮件内容 -->
 <select id="getEmailData" parameterType="map" statementType="CALLABLE" resultType="java.util.LinkedHashMap">
	  <![CDATA[  
	 	 CALL get_email_data(#{recordDate},#{type},#{orgNo},#{month},#{lastMonthDay},#{lastMonth},#{times})
	  	]]>
	</select>
</mapper>